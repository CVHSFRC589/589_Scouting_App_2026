// Mock data for demo/offline mode
// This provides sample data when the backend is unavailable

export const mockRobots: Robot[] = [
    {
        team_num: 254,
        team_name: "The Cheesy Poofs",
        regional: "be",
        rank_value: 1,
        vision_sys: "PhotonVision",
        drive_train: "Swerve",
        ground_intake: true,
        source_intake: false,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: true,
        l4_scoring: true,
        remove: true,
        processor: false,
        net: true,
        climb_deep: false,
        climb_shallow: true,
        comments: "Fast swerve drive, focuses on coral scoring",
        picture_path: null,
        avg_l1: 2.5,
        avg_l2: 3.2,
        avg_l3: 2.8,
        avg_l4: 1.5,
        avg_coral: 10.0,
        avg_algae_scored: 5.2,
        avg_algae_removed: 3.8,
        avg_algae_processed: 4.5,
        avg_algae: 13.5,
        matches: []
    },
    {
        team_num: 1678,
        team_name: "Citrus Circuits",
        regional: "be",
        rank_value: 2,
        vision_sys: "Limelight",
        drive_train: "Swerve",
        ground_intake: true,
        source_intake: true,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: true,
        l4_scoring: false,
        remove: true,
        processor: true,
        net: true,
        climb_deep: true,
        climb_shallow: true,
        comments: "Very consistent, excellent at algae processing",
        picture_path: null,
        avg_l1: 2.2,
        avg_l2: 2.8,
        avg_l3: 3.1,
        avg_l4: 0.8,
        avg_coral: 8.9,
        avg_algae_scored: 6.5,
        avg_algae_removed: 5.2,
        avg_algae_processed: 6.8,
        avg_algae: 18.5,
        matches: []
    },
    {
        team_num: 589,
        team_name: "Falkon Robotics",
        regional: "be",
        rank_value: 3,
        vision_sys: "Limelight",
        drive_train: "Swerve",
        ground_intake: true,
        source_intake: true,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: true,
        l4_scoring: true,
        remove: true,
        processor: true,
        net: true,
        climb_deep: true,
        climb_shallow: false,
        comments: "Excellent all-around robot with strong coral and algae capabilities",
        picture_path: null,
        avg_l1: 1.8,
        avg_l2: 2.5,
        avg_l3: 2.2,
        avg_l4: 1.2,
        avg_coral: 7.7,
        avg_algae_scored: 4.8,
        avg_algae_removed: 4.2,
        avg_algae_processed: 5.5,
        avg_algae: 14.5,
        matches: []
    },
    {
        team_num: 649,
        team_name: "MSET Fish",
        regional: "be",
        rank_value: 4,
        vision_sys: "Limelight",
        drive_train: "West Coast",
        ground_intake: true,
        source_intake: false,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: false,
        l4_scoring: false,
        remove: false,
        processor: false,
        net: true,
        climb_deep: false,
        climb_shallow: true,
        comments: "Simple and effective design, reliable",
        picture_path: null,
        avg_l1: 1.5,
        avg_l2: 2.0,
        avg_l3: 0,
        avg_l4: 0,
        avg_coral: 3.5,
        avg_algae_scored: 2.8,
        avg_algae_removed: 0,
        avg_algae_processed: 0,
        avg_algae: 2.8,
        matches: []
    },
    {
        team_num: 1868,
        team_name: "Space Cookies",
        regional: "be",
        rank_value: 5,
        vision_sys: "PhotonVision",
        drive_train: "Swerve",
        ground_intake: true,
        source_intake: true,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: true,
        l4_scoring: true,
        remove: true,
        processor: true,
        net: true,
        climb_deep: true,
        climb_shallow: false,
        comments: "High scorer, excellent autonomous",
        picture_path: null,
        avg_l1: 2.0,
        avg_l2: 2.8,
        avg_l3: 2.5,
        avg_l4: 1.8,
        avg_coral: 9.1,
        avg_algae_scored: 5.5,
        avg_algae_removed: 4.8,
        avg_algae_processed: 6.2,
        avg_algae: 16.5,
        matches: []
    },
    {
        team_num: 972,
        team_name: "Iron Claw",
        regional: "be",
        rank_value: 6,
        vision_sys: "None",
        drive_train: "West Coast",
        ground_intake: true,
        source_intake: false,
        l1_scoring: true,
        l2_scoring: true,
        l3_scoring: true,
        l4_scoring: false,
        remove: true,
        processor: false,
        net: false,
        climb_deep: false,
        climb_shallow: false,
        comments: "Good defense robot",
        picture_path: null,
        avg_l1: 1.2,
        avg_l2: 1.8,
        avg_l3: 1.5,
        avg_l4: 0,
        avg_coral: 4.5,
        avg_algae_scored: 3.2,
        avg_algae_removed: 2.8,
        avg_algae_processed: 0,
        avg_algae: 6.0,
        matches: []
    }
];

export const mockTeamMatches: TeamMatchResponse[] = [
    {
        match_num: 1,
        team_num: 589,
        regional: "be",
        auto_starting_position: 1,
        auto_l1: 1,
        auto_l2: 2,
        auto_l3: 1,
        auto_l4: 0,
        tele_l1: 2,
        tele_l2: 3,
        tele_l3: 2,
        tele_l4: 1,
        algae_scored: 5,
        algae_removed: 4,
        algae_processed: 6,
        climb_deep: true,
        climb_shallow: false,
        parked: false,
        defense_rating: 3,
        driver_rating: 4,
        notes: "Strong performance, good autonomous"
    },
    {
        match_num: 2,
        team_num: 589,
        regional: "be",
        auto_starting_position: 2,
        auto_l1: 2,
        auto_l2: 1,
        auto_l3: 2,
        auto_l4: 1,
        tele_l1: 1,
        tele_l2: 2,
        tele_l3: 3,
        tele_l4: 2,
        algae_scored: 4,
        algae_removed: 3,
        algae_processed: 5,
        climb_deep: false,
        climb_shallow: true,
        parked: false,
        defense_rating: 4,
        driver_rating: 5,
        notes: "Excellent teleop, climbed successfully"
    },
    {
        match_num: 3,
        team_num: 589,
        regional: "be",
        auto_starting_position: 3,
        auto_l1: 1,
        auto_l2: 2,
        auto_l3: 2,
        auto_l4: 1,
        tele_l1: 2,
        tele_l2: 3,
        tele_l3: 1,
        tele_l4: 1,
        algae_scored: 5,
        algae_removed: 5,
        algae_processed: 5,
        climb_deep: true,
        climb_shallow: false,
        parked: false,
        defense_rating: 3,
        driver_rating: 4,
        notes: "Consistent performance throughout"
    }
];

export const mockRemainingMatches: TeamMatchBase[] = [
    {
        match_num: 4,
        team_num: 589,
        regional: "be"
    },
    {
        match_num: 5,
        team_num: 589,
        regional: "be"
    },
    {
        match_num: 6,
        team_num: 589,
        regional: "be"
    }
];

export const mockClimbData: ClimbData = {
    climb_deep_count: 2,
    climb_shallow_count: 1,
    parked_count: 0,
    total_matches: 3,
    climb_deep_percentage: 66.7,
    climb_shallow_percentage: 33.3,
    parked_percentage: 0
};

// Helper function to get mock robot by team number
export const getMockRobotByTeam = (teamNum: number, regional: string): Robot | null => {
    const robot = mockRobots.find(r => r.team_num === teamNum);
    if (robot) {
        return { ...robot, regional };
    }
    // Return a generic robot if not found
    return {
        team_num: teamNum,
        team_name: `Team ${teamNum}`,
        regional: regional,
        rank_value: 99,
        vision_sys: "Unknown",
        drive_train: "Unknown",
        ground_intake: false,
        source_intake: false,
        l1_scoring: false,
        l2_scoring: false,
        l3_scoring: false,
        l4_scoring: false,
        remove: false,
        processor: false,
        net: false,
        climb_deep: false,
        climb_shallow: false,
        comments: "Demo data - backend unavailable",
        picture_path: null,
        avg_l1: 0,
        avg_l2: 0,
        avg_l3: 0,
        avg_l4: 0,
        avg_coral: 0,
        avg_algae_scored: 0,
        avg_algae_removed: 0,
        avg_algae_processed: 0,
        avg_algae: 0,
        matches: []
    };
};

// Helper function to get all mock robots for a regional
export const getMockRobotsByRegional = (regional: string): Robot[] => {
    return mockRobots.map(robot => ({ ...robot, regional }));
};
